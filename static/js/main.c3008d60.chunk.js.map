{"version":3,"sources":["components/NewsPreview.module.css","components/TodoItem.module.css","components/Article.module.css","components/Paginator.module.css","components/Header.module.css","components/Weather.module.css","components/Footer.module.css","containers/TodoApp.module.css","components/TodoList.module.css","components/Header.jsx","components/TodoInput.js","api/api.js","actionCreators/actionCreator.js","constants.js","components/TodoItem.js","components/TodoList.jsx","components/Footer.jsx","containers/TodoApp.jsx","components/NewsPreview.jsx","components/Paginator.jsx","components/News.jsx","containers/NewsContainer.jsx","components/Weather.jsx","containers/WeatherContainer.jsx","components/Article.jsx","containers/ArticleContainer.jsx","App.js","serviceWorker.js","reducers/tasksReducer.js","reducers/filtersReducer.js","reducers/newsReducer.js","reducers/weatherReducer.js","reducers/reduxStore.js","index.js"],"names":["module","exports","withRouter","props","match","location","history","pathname","className","styles","header","to","TodoInput","value","onChange","addTask","placeholder","onKeyPress","instanceNews","axios","baseURL","headers","instanceWeather","newsAPI","topic","sortBy","pageSize","currentPage","get","weatherAPI","setTopicAC","type","setSortByAC","getIdAndLocaleDateToArticles","data","length","articles","i","id","publishedAt","Date","toLocaleString","TodoItem","state","editMode","taskText","text","timer","activateEditMode","setState","deactivateEditMode","updateTaskTextAC","onTaskTextChange","e","currentTarget","updateTaskText","key","mouseDownHandler","setTimeout","mouseUpHandler","clearTimeout","prevProps","prevState","this","isCompleted","completeTask","removeTask","todoItem","icon","faCheckCircle","faCircle","size","onClick","iconDone","todoItemDone","todoItemDefault","onMouseDown","onMouseUp","updateTaskTextDone","updateTaskTextDefault","onBlur","autoFocus","faTimesCircle","iconDel","React","PureComponent","TodoList","tasks","list","map","BTN_FILTERS","Footer","amount","changeFilter","currentFilter","buttonsBottom","btn","TodoApp","handleChange","target","addTaskAC","getTime","getActiveTasksCounter","filter","task","getFilteredTasks","tasksAmount","filteredTasks","filters","todoContainer","completeTaskAC","removeTaskAC","activeFilter","changeFilterAC","connect","tasksReducer","filtersReducer","NewsPreview","author","title","description","url","image","date","content","setCurrentArticle","postSection","cardWrapper","darkerImg","src","alt","img","cardTitle","postInfo","Paginator","totalNewsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","push","portionsCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","paginatorBtn","p","pageNumber","News","a","urlToImage","NewsContainer","newTopic","newSortBy","requestNewsTC","Component","compose","newsReducer","requestedPage","dispatch","response","totalResults","currentWeather","weatherReducer","weather","main","visibility","wind","clouds","sys","dt","name","console","log","imgUrl","dateRise","sunrise","hoursRise","getHours","minutesRise","getMinutes","dateSet","sunset","hoursSet","minutesSet","container","topContainer","temp","temp_min","temp_max","imgWrapper","bottomContainer","deg","speed","all","humidity","pressure","WeatherContainer","requestCurrentWeatherTC","Article","article","headline","authorAndDate","articleImageWrapper","articleImage","href","ArticleContainer","currentArticle","unsetCurrentArticle","App","path","render","Boolean","window","hostname","initialState","action","newTask","fiveDayForecast","reducers","combineReducers","store","applyMiddleware","save","namespace","thunkMiddleware","createStore","createStoreWithMiddleware","load","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c3008d60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postSection\":\"NewsPreview_postSection__2VkAa\",\"cardWrapper\":\"NewsPreview_cardWrapper__2HnB6\",\"cardTitle\":\"NewsPreview_cardTitle__2yp5C\",\"postInfo\":\"NewsPreview_postInfo__2SZT-\",\"author\":\"NewsPreview_author__C30C8\",\"date\":\"NewsPreview_date__3tuGh\",\"title\":\"NewsPreview_title__3pL1x\",\"description\":\"NewsPreview_description__39sMJ\",\"darkerImg\":\"NewsPreview_darkerImg__XQ_Ch\",\"img\":\"NewsPreview_img__1-Omg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoItem\":\"TodoItem_todoItem__2IiaL\",\"todoItemDefault\":\"TodoItem_todoItemDefault__3RMUt\",\"todoItemDone\":\"TodoItem_todoItemDone__17SVq\",\"iconDone\":\"TodoItem_iconDone__2zmEV\",\"iconDel\":\"TodoItem_iconDel__2cMEa\",\"updateTaskTextDefault\":\"TodoItem_updateTaskTextDefault__1Rd9G\",\"updateTaskTextDone\":\"TodoItem_updateTaskTextDone__eAMnH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"article\":\"Article_article__5YdEk\",\"headline\":\"Article_headline__1zIic\",\"authorAndDate\":\"Article_authorAndDate__J-nVS\",\"title\":\"Article_title__1Mm6_\",\"articleImageWrapper\":\"Article_articleImageWrapper__kSzPF\",\"articleImage\":\"Article_articleImage__2g-qM\",\"content\":\"Article_content__27sGh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1Jk5L\",\"pageNumber\":\"Paginator_pageNumber__KTADM\",\"pages\":\"Paginator_pages__3c8B5\",\"paginatorBtn\":\"Paginator_paginatorBtn__1k8zu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3aMD0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Weather_container__3jiyo\",\"topContainer\":\"Weather_topContainer__2own-\",\"imgWrapper\":\"Weather_imgWrapper__X4Ui0\",\"bottomContainer\":\"Weather_bottomContainer__3UpY3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsBottom\":\"Footer_buttonsBottom__B4owN\",\"amount\":\"Footer_amount__br43c\",\"btn\":\"Footer_btn__FmJp2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoContainer\":\"TodoApp_todoContainer__1ig-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"TodoList_list__3uD_o\"};","import React from \"react\";\r\nimport styles from \"./Header.module.css\";\r\nimport {NavLink, withRouter} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    const {match, location, history} = props;\r\n    switch(location.pathname) {\r\n        case \"/news\": {\r\n            return (\r\n                <div className={styles.header}>\r\n                    <NavLink to={\"/\"}>To Do List</NavLink>\r\n                    <NavLink to={\"/weather\"}>Weather Channel</NavLink>\r\n                </div>\r\n            );\r\n        }\r\n        case \"/weather\": {\r\n            return (\r\n                <div className={styles.header}>\r\n                    <NavLink to={\"/\"}>To Do List</NavLink>\r\n                    <NavLink to={\"/news\"}>News Channel</NavLink>\r\n                </div>\r\n            );\r\n        }\r\n        case \"/news/:articleId\": {\r\n            return (\r\n                <div className={styles.header}>\r\n                    <NavLink to={\"/\"}>To Do List</NavLink>\r\n                    <NavLink to={\"/news\"}>News Channel</NavLink>\r\n                    <NavLink to={\"/weather\"}>Weather Channel</NavLink>\r\n                </div>\r\n            );\r\n        }\r\n        default: {\r\n            return (\r\n                <div className={styles.header}>\r\n                    <NavLink to={\"/news\"}>News Feed</NavLink>\r\n                    <NavLink to={\"/weather\"}>Weather Channel</NavLink>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default withRouter(Header);","import React from \"react\";\r\n\r\nconst TodoInput = ({value, onChange, addTask}) => {\r\n    return (\r\n      <div>\r\n        <i/>\r\n        <input placeholder=\"Add a task\" value={value} onChange={onChange} onKeyPress={addTask}/>\r\n      </div>\r\n    );\r\n};\r\n  \r\n  export default TodoInput;","import * as axios from \"axios\";\r\n\r\nconst instanceNews = axios.create({\r\n    baseURL: \"https://newsapi.org/v2/\",\r\n    headers: {\r\n        \"X-Api-Key\": \"40b5268a68a74369a4eabc0b9745407e\"\r\n    }\r\n});\r\n\r\nconst instanceWeather = axios.create({\r\n    baseURL: \"http://api.openweathermap.org/data/2.5/\"\r\n});\r\n\r\nexport const newsAPI = {\r\n    getNews(topic = \"apple\", sortBy = \"publishedAt\", pageSize = 20, currentPage = 1) {\r\n        return instanceNews.get(`everything?language=en&q=${topic}&sortBy=${sortBy}&pageSize=${pageSize}&page=${currentPage}`);\r\n    },\r\n    getTopNews(pageSize = 20, currentPage = 1) {\r\n        return instanceNews.get(`top-headlines?pageSize=${pageSize}&page=${currentPage}`);\r\n    }\r\n};\r\n\r\nexport const weatherAPI = {\r\n    getFiveDayForecast() {\r\n        return instanceWeather.get(`forecast?id=706483&units=metric&APPID=a8e26109a999b36c455b988c3c998bca`);\r\n    },\r\n    getCurrentWeather() {\r\n        return instanceWeather.get(`weather?id=706483&units=metric&APPID=a8e26109a999b36c455b988c3c998bca`);\r\n    }\r\n};","import {\r\n    ADD_TASK,\r\n    REMOVE_TASK,\r\n    COMPLETE_TASK,\r\n    CHANGE_FILTER,\r\n    UPDATE_TASK_TEXT,\r\n    SET_TOTAL_NEWS_COUNT,\r\n    SET_CURRENT_PAGE,\r\n    SET_ARTICLES,\r\n    SET_TOPIC,\r\n    SET_SORT_BY,\r\n    SET_CURRENT_ARTICLE,\r\n    UNSET_CURRENT_ARTICLE,\r\n    SET_FIVE_DAY_FORECAST,\r\n    SET_CURRENT_WEATHER\r\n} from \"../constants\";\r\nimport {newsAPI, weatherAPI} from \"../api/api\";\r\n\r\nexport const addTaskAC = (id, text, isCompleted) => ({\r\n    type: ADD_TASK,\r\n    id,\r\n    text,\r\n    isCompleted\r\n});\r\n\r\nexport const removeTaskAC = id => ({\r\n    type: REMOVE_TASK,\r\n    id\r\n});\r\n\r\nexport const completeTaskAC = id => ({\r\n    type: COMPLETE_TASK,\r\n    id\r\n});\r\n\r\nexport const changeFilterAC = currentFilter => ({\r\n    type: CHANGE_FILTER,\r\n    currentFilter\r\n});\r\n\r\nexport const updateTaskTextAC = (id, text) => ({\r\n    type: UPDATE_TASK_TEXT,\r\n    id,\r\n    text\r\n});\r\n\r\nexport const setTotalNewsCountAC = (totalNewsCount) => ({\r\n    type: SET_TOTAL_NEWS_COUNT,\r\n    totalNewsCount\r\n});\r\n\r\nexport const setCurrentPageAC = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n});\r\n\r\nexport const setArticlesAC = (articles) => ({\r\n    type: SET_ARTICLES,\r\n    articles\r\n});\r\n\r\nexport const setTopicAC = (topic) => ({\r\n    type: SET_TOPIC,\r\n    topic\r\n});\r\n\r\nexport const setSortByAC = (sortBy) => ({\r\n    type: SET_SORT_BY,\r\n    sortBy\r\n});\r\n\r\nexport const setCurrentArticle = (id, author, title, description, url, image, date, content) => ({\r\n    type: SET_CURRENT_ARTICLE,\r\n    id,\r\n    author,\r\n    title,\r\n    description,\r\n    url,\r\n    image,\r\n    date,\r\n    content\r\n});\r\n\r\nexport const unsetCurrentArticle = () => ({\r\n    type: UNSET_CURRENT_ARTICLE\r\n});\r\n\r\n// export const setFiveDayForecast = ({ }) => ({\r\n//     type: SET_FIVE_DAY_FORECAST,\r\n//\r\n// });\r\n\r\nexport const setCurrentWeather = ({weather, main, visibility, wind, clouds, dt, sys, name}) => ({\r\n    type: SET_CURRENT_WEATHER,\r\n    weather,\r\n    main,\r\n    visibility,\r\n    wind,\r\n    clouds,\r\n    dt,\r\n    sys,\r\n    name\r\n});\r\n\r\nconst getIdAndLocaleDateToArticles = (data) => {\r\n    let length = data.articles.length;\r\n    for(let i = 0; i < length; i++) {\r\n        data.articles[i].id = i;\r\n        data.articles[i].publishedAt = new Date(data.articles[i].publishedAt).toLocaleString();\r\n    }\r\n    return data;\r\n};\r\n\r\nexport const requestNewsTC = (topic, sortBy, pageSize, requestedPage) => async (dispatch) => {\r\n    dispatch(setCurrentPageAC(requestedPage));\r\n    dispatch(setTopicAC(topic));\r\n    dispatch(setSortByAC(sortBy));\r\n    let response = await newsAPI.getNews(topic, sortBy, pageSize, requestedPage);\r\n    let data = await getIdAndLocaleDateToArticles(response.data);\r\n    dispatch(setArticlesAC(data.articles));\r\n    dispatch(setTotalNewsCountAC(data.totalResults));\r\n};\r\n\r\nexport const requestCurrentWeatherTC = () => async (dispatch) => {\r\n    let response = await weatherAPI.getCurrentWeather();\r\n    dispatch(setCurrentWeather(response.data));\r\n};\r\n\r\n// export const requestFiveDayForecastTC = () => async (dispatch) => {\r\n//     let response = await weatherAPI.getFiveDayForecast();\r\n//     dispatch(setFiveDayForecast(response.data));\r\n// };","export const ADD_TASK = \"ADD_TASK\";\r\nexport const REMOVE_TASK = \"REMOVE_TASK\";\r\nexport const COMPLETE_TASK = \"COMPLETE_TASK\";\r\nexport const CHANGE_FILTER = \"CHANGE_FILTER\";\r\nexport const UPDATE_TASK_TEXT = \"UPDATE_TASK_TEXT\";\r\nexport const SET_ARTICLES = \"SET_ARTICLES\";\r\nexport const SET_TOTAL_NEWS_COUNT = \"SET_TOTAL_NEWS_COUNT\";\r\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nexport const SET_TOPIC = \"SET_TOPIC\";\r\nexport const SET_SORT_BY = \"SET_SORT_BY\";\r\nexport const SET_CURRENT_ARTICLE = \"SET_CURRENT_ARTICLE\";\r\nexport const UNSET_CURRENT_ARTICLE = \"UNSET_CURRENT_ARTICLE\";\r\nexport const SET_FIVE_DAY_FORECAST = \"SET_FIVE_DAY_FORECAST\";\r\nexport const SET_CURRENT_WEATHER = \"SET_CURRENT_WEATHER\";","import React from \"react\";\nimport styles from \"./TodoItem.module.css\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCircle, faCheckCircle, faTimesCircle} from \"@fortawesome/free-regular-svg-icons\";\n\nclass TodoItem extends React.PureComponent {\n    state = {\n        editMode: false,\n        taskText: this.props.text,\n        id: null\n    };\n\n    timer = 0;\n\n    activateEditMode = (id) => {\n        this.setState({\n            editMode: true,\n            id\n        });\n    };\n\n    deactivateEditMode = () => {\n        this.props.updateTaskTextAC(this.state.id, this.state.taskText);\n        this.setState({\n            editMode: false\n        });\n    };\n\n    onTaskTextChange = (e) => {\n        this.setState({\n            taskText: e.currentTarget.value\n        })\n    };\n\n    updateTaskText = ({key}) => {\n        if(key === \"Enter\") {\n            this.props.updateTaskTextAC(this.state.id, this.state.taskText);\n            this.setState({\n                editMode: false\n            });\n        }\n    };\n\n    mouseDownHandler = (id) => {\n        this.timer = setTimeout(this.activateEditMode, 800, id);\n    };\n\n    mouseUpHandler = () => {\n        clearTimeout(this.timer);\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.text !== this.props.text) {\n            this.setState({\n                taskText: this.props.text\n            });\n        }\n    }\n\n    render() {\n        const {id, isCompleted, completeTask, removeTask} = this.props;\n        const {editMode, taskText} = this.state;\n        return (\n            <li>\n                <div className={styles.todoItem}>\n                    <FontAwesomeIcon icon={isCompleted ? faCheckCircle : faCircle} size=\"lg\" onClick={() => completeTask(id)} className={styles.iconDone}/>\n                    {!editMode && \n                        <span className={isCompleted ? styles.todoItemDone : styles.todoItemDefault} onMouseDown={() => this.mouseDownHandler(id)} onMouseUp={this.mouseUpHandler}>\n                            {taskText}\n                        </span>\n                    }\n                    {editMode &&\n                        <input className={isCompleted ? styles.updateTaskTextDone : styles.updateTaskTextDefault} onKeyPress={this.updateTaskText} onChange={this.onTaskTextChange} onBlur={this.deactivateEditMode} autoFocus={true} value={taskText}/>\n                    }\n                    <FontAwesomeIcon icon={faTimesCircle} size=\"lg\" onClick={() => removeTask(id)} className={styles.iconDel}/>\n                </div>\n            </li>\n        );\n    }\n}\n\nexport default TodoItem;\n\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport styles from \"./TodoList.module.css\";\r\n\r\nconst TodoList = ({tasks, completeTask, removeTask, updateTaskTextAC}) => (\r\n    <ul className={styles.list}>\r\n        <div>\r\n        {tasks.map(({id, text, isCompleted}) => (\r\n            <TodoItem key={id} id={id} text={text} isCompleted={isCompleted} completeTask={completeTask} removeTask={removeTask} updateTaskTextAC={updateTaskTextAC}/>\r\n        ))}\r\n        </div>\r\n    </ul>\r\n);\r\n\r\nexport default TodoList;","import React from \"react\";\r\nimport styles from \"./Footer.module.css\";\r\n\r\nconst BTN_FILTERS = [\r\n    {\r\n        text: \"All\",\r\n        id: \"all\",\r\n    },\r\n    {\r\n        text: \"Active\",\r\n        id: \"active\",\r\n    },\r\n    {\r\n        text: \"Completed\",\r\n        id: \"completed\"\r\n    }\r\n];\r\n\r\nconst Footer = ({amount, currentFilter, changeFilter}) => (\r\n    <div className={styles.buttonsBottom}>\r\n        <span className={styles.amount}>{`${amount} Left`}</span>\r\n            {\r\n                BTN_FILTERS.map(({id, text}) => (\r\n                    <button className={styles.btn} key={id} onClick={() => changeFilter(id)}>{text}</button>\r\n                ))\r\n            }\r\n    </div>\r\n);\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport styles from './TodoApp.module.css';\r\nimport TodoInput from \"../components/TodoInput\";\r\nimport {addTaskAC, removeTaskAC, completeTaskAC, changeFilterAC, updateTaskTextAC} from \"../actionCreators/actionCreator\";\r\nimport TodoList from \"../components/TodoList\";\r\nimport Footer from \"../components/Footer\";\r\n\r\n\r\nclass TodoApp extends React.PureComponent {\r\n  state = {\r\n    taskText: \"\"\r\n  };\r\n  \r\n  handleChange = ({target: {value}}) => {\r\n    this.setState({\r\n      taskText: value\r\n    });\r\n  };\r\n\r\n  addTask = ({key}) => {\r\n    const {taskText} = this.state;\r\n    if(taskText.length > 3 && key === \"Enter\") {\r\n      const {addTaskAC} = this.props;\r\n      addTaskAC((new Date()).getTime(), taskText, false);\r\n      this.setState({\r\n        taskText: \"\"\r\n      });\r\n    }\r\n  };\r\n\r\n  getActiveTasksCounter = tasks => tasks.filter(task => !task.isCompleted).length;\r\n\r\n  getFilteredTasks = (tasks, currentFilter) => {\r\n    switch (currentFilter) {\r\n        case \"active\": {\r\n            return this.props.tasks.filter(task => ((!task.isCompleted) && task));\r\n        }\r\n        case \"completed\": {\r\n            return this.props.tasks.filter(task => ((task.isCompleted) && task));\r\n        }\r\n        default:\r\n            return tasks;\r\n    }\r\n  };\r\n\r\n  render() {\r\n      const tasksAmount = this.getActiveTasksCounter(this.props.tasks);\r\n      const filteredTasks = this.getFilteredTasks(this.props.tasks, this.props.filters);\r\n    return (\r\n      <div className={styles.todoContainer}>\r\n        <TodoInput onChange={this.handleChange} addTask={this.addTask} value={this.state.taskText}/>\r\n        <TodoList tasks={filteredTasks} completeTask={this.props.completeTaskAC} removeTask={this.props.removeTaskAC} updateTaskTextAC={this.props.updateTaskTextAC}/>\r\n        <Footer amount={tasksAmount} activeFilter={this.props.filters} changeFilter={this.props.changeFilterAC}/>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default connect(state => ({\r\n  tasks: state.tasksReducer.tasks,\r\n  filters: state.filtersReducer\r\n}), {addTaskAC, removeTaskAC, completeTaskAC, changeFilterAC, updateTaskTextAC})(TodoApp);","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from \"./NewsPreview.module.css\";\r\n\r\nclass NewsPreview extends React.PureComponent {\r\n    render() {\r\n        const {id, author, title, description, url, image, date, content, setCurrentArticle} = this.props;\r\n        return (\r\n            <div className={styles.postSection}>\r\n                <NavLink to={\"/news/\" + id}\r\n                         onClick={() => setCurrentArticle(id, author, title, description, url, image, date, content)}>\r\n                    <div className={styles.cardWrapper}>\r\n                        <div className={styles.darkerImg}>\r\n                            <img src={image} alt={\"articleImage\"} className={styles.img}/>\r\n                        </div>\r\n                        <div className={styles.cardTitle}>\r\n                            <div className={styles.postInfo}>\r\n                                <span className={styles.author}>{author}</span>\r\n                                <span className={styles.date}>{date}</span>\r\n                            </div>\r\n                            <p className={styles.title}>{title}</p>\r\n                        </div>\r\n                    </div>\r\n                </NavLink>\r\n                <div>\r\n                    <p className={styles.description}>{description}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewsPreview;\r\n","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\n\r\nconst Paginator = ({totalNewsCount, currentPage, pageSize, topic, sortBy, onPageChanged, portionSize = 15}) => {\r\n\r\n    let pagesCount = Math.ceil(totalNewsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionsCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => setPortionNumber(portionNumber - 1)}\r\n                    className={styles.paginatorBtn}>PREV</button>}\r\n\r\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map((p) => {\r\n                return (\r\n                    <span key={p}\r\n                          onClick={() => onPageChanged(topic, sortBy, p)}\r\n                          className={(currentPage === p) ? styles.pageNumber : styles.pages}>\r\n                        {p}\r\n                    </span>\r\n                );\r\n            })}\r\n\r\n            {portionsCount > portionNumber &&\r\n            <button onClick={() => setPortionNumber(portionNumber + 1)}\r\n                    className={styles.paginatorBtn}>NEXT</button>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport NewsPreview from \"./NewsPreview\";\r\nimport Paginator from \"./Paginator\";\r\n\r\nconst News = ({articles, totalNewsCount, currentPage, pageSize, topic, sortBy, onPageChanged, setCurrentArticle}) => {\r\n    return <div>\r\n        <Paginator totalNewsCount={totalNewsCount}\r\n                   currentPage={currentPage}\r\n                   pageSize={pageSize}\r\n                   topic={topic}\r\n                   sortBy={sortBy}\r\n                   onPageChanged={onPageChanged}/>\r\n        <div>\r\n            {articles.map(a => <NewsPreview key={a.id}\r\n                                            id={a.id}\r\n                                            author={a.author}\r\n                                            title={a.title}\r\n                                            description={a.description}\r\n                                            url={a.url}\r\n                                            image={a.urlToImage}\r\n                                            date={a.publishedAt}\r\n                                            content={a.content}\r\n                                            setCurrentArticle={setCurrentArticle}/>)}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default News;","import React from \"react\";\r\nimport News from \"../components/News\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {requestNewsTC, setCurrentArticle} from \"../actionCreators/actionCreator\";\r\n\r\nclass NewsContainer extends React.Component{\r\n    componentDidMount() {\r\n        this.props.requestNewsTC(this.props.topic, this.props.sortBy, this.props.pageSize, this.props.currentPage);\r\n    }\r\n\r\n    onPageChanged = (newTopic = this.props.topic, newSortBy = this.props.sortBy, pageNumber = this.props.currentPage) => {\r\n        this.props.requestNewsTC(newTopic, newSortBy, this.props.pageSize, pageNumber);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <News articles={this.props.articles}\r\n                  totalNewsCount={this.props.totalNewsCount}\r\n                  currentPage={this.props.currentPage}\r\n                  pageSize={this.props.pageSize}\r\n                  topic={this.props.topic}\r\n                  sortBy={this.props.sortBy}\r\n                  onPageChanged={this.onPageChanged}\r\n                  setCurrentArticle={this.props.setCurrentArticle}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        articles: state.newsReducer.articles,\r\n        totalNewsCount: state.newsReducer.totalNewsCount,\r\n        currentPage: state.newsReducer.currentPage,\r\n        pageSize: state.newsReducer.pageSize,\r\n        topic: state.newsReducer.topic,\r\n        sortBy: state.newsReducer.sortBy\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {requestNewsTC, setCurrentArticle})\r\n)(NewsContainer);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport styles from \"./Weather.module.css\";\r\n\r\nconst Weather = ({currentWeather}) => {\r\n    const {weather, main, visibility, wind, clouds, dt, sys, name} = currentWeather;\r\n    console.log(currentWeather);\r\n\r\n    let imgUrl = `https://openweathermap.org/img/w/${weather[0].icon}.png`;\r\n    let dateRise = new Date(sys.sunrise * 1000);\r\n    let hoursRise =  dateRise.getHours();\r\n    let minutesRise = dateRise.getMinutes();\r\n    let dateSet = new Date(sys.sunset * 1000);\r\n    let hoursSet = dateSet.getHours();\r\n    let minutesSet = dateSet.getMinutes();\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.container}>\r\n                <div className={styles.topContainer}>\r\n                    <h1>{name}</h1>\r\n                    <div>\r\n                        <span>Current temperature: {main.temp}&#176;C</span>\r\n                    </div>\r\n                    <div>\r\n                        <span>Varies from {main.temp_min}&#176;C to {main.temp_max}&#176;C</span>\r\n                    </div>\r\n                    <div className={styles.imgWrapper}>\r\n                        <span>{weather[0].main}</span>\r\n                        <img src={imgUrl} alt=\"weatherIcon\"/>\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n                <div className={styles.bottomContainer}>\r\n                    <div>\r\n                        <span>Wind: {wind.deg}&#176; {wind.speed} m/s</span>\r\n                    </div>\r\n                    <div>\r\n                        <span>Visibility: {visibility} m</span>\r\n                    </div>\r\n                    <div>\r\n                        <span>Cloudiness: {clouds.all}%</span>\r\n                    </div>\r\n                    <div>\r\n                        <span>Humidity: {main.humidity}%</span>\r\n                    </div>\r\n                    <div>\r\n                        <span>Pressure: {main.pressure} hPa</span>\r\n                    </div>\r\n                    <div>\r\n                        <span>Sunrise: {hoursRise}:{minutesRise}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span>Sunset: {hoursSet}:{minutesSet}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        currentWeather: state.weatherReducer.currentWeather\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Weather);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport Weather from \"../components/Weather\";\r\nimport {requestCurrentWeatherTC} from \"../actionCreators/actionCreator\";\r\n\r\nclass WeatherContainer extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.props.requestCurrentWeatherTC();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Weather />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        currentWeather: state.weatherReducer.currentWeather\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {requestCurrentWeatherTC})(WeatherContainer);","import React from \"react\";\r\nimport styles from \"./Article.module.css\";\r\n\r\nconst Article = ({id, author, title, description, url, image, date, content}) => {\r\n    return (\r\n        <div className={styles.article}>\r\n            <div className={styles.headline}>\r\n                <div className={styles.authorAndDate}>\r\n                    <span>{author}</span>\r\n                    <span>{date}</span>\r\n                </div>\r\n                <div className={styles.title}>\r\n                    <h1>{title}</h1>\r\n                </div>\r\n            </div>\r\n            <div className={styles.articleImageWrapper}>\r\n                <img src={image} alt=\"articleImage\" className={styles.articleImage}/>\r\n                <span><a href={url}>Article source here</a></span>\r\n            </div>\r\n            <div className={styles.content}>{content}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Article;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {unsetCurrentArticle} from \"../actionCreators/actionCreator\";\r\nimport Article from \"../components/Article\";\r\n\r\nclass ArticleContainer extends React.PureComponent {\r\n    render() {\r\n        const {id, author, title, description, url, image, date, content} = this.props.currentArticle;\r\n        return (\r\n            <Article id={id}\r\n                     author={author}\r\n                     title={title}\r\n                     description={description}\r\n                     url={url}\r\n                     image={image}\r\n                     date={date}\r\n                     content={content}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        currentArticle: state.newsReducer.currentArticle\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {unsetCurrentArticle}),\r\n    withRouter,\r\n)(ArticleContainer);","import React, {Fragment} from \"react\";\nimport {Route, Switch, withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport Header from \"./components/Header\";\nimport TodoApp from \"./containers/TodoApp\";\nimport NewsContainer from \"./containers/NewsContainer\";\nimport WeatherContainer from \"./containers/WeatherContainer\";\nimport ArticleContainer from \"./containers/ArticleContainer\";\n\n\nclass App extends React.PureComponent {\n    render() {\n        return (\n            <Fragment>\n                <Header title=\"To do list\"/>\n                <Switch>\n                    <Route path={\"/news/:articleId\"} render={() => <ArticleContainer/>}/>\n                    <Route path={\"/news\"} render={() => <NewsContainer/>}/>\n                    <Route path={\"/weather\"} render={() => <WeatherContainer/>}/>\n                    <Route path={\"/\"} render={() => <TodoApp/>}/>\n                </Switch>\n            </Fragment>\n        );\n    }\n}\n\nexport default compose(\n    withRouter,\n    connect())(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {ADD_TASK, REMOVE_TASK, COMPLETE_TASK, UPDATE_TASK_TEXT} from \"../constants\";\r\n\r\nconst initialState = {\r\n    tasks: [\r\n        {\r\n            id: 322,\r\n            text: \"Это захардкодженая таска, добавляй свои плз\",\r\n            isCompleted: false\r\n        }\r\n    ]\r\n};\r\n\r\nconst tasksReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_TASK: {\r\n            let newTask = {\r\n                id: action.id,\r\n                text: action.text,\r\n                isCompleted: action.isCompleted\r\n            };\r\n            return {\r\n                ...state,\r\n                tasks: [...state.tasks, newTask]\r\n            }\r\n        }\r\n        case COMPLETE_TASK: {\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(task => {\r\n                    if(task.id === action.id) {\r\n                        return {...task, isCompleted: !task.isCompleted}\r\n                    }\r\n                    return task;\r\n                })\r\n                // tasks: state.tasks.map(task => ((task.id === action.id) && {...task, isCompleted: true}))\r\n            }\r\n        }\r\n        case REMOVE_TASK: {\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.filter(task => task.id !== action.id)\r\n            }\r\n        }\r\n        case UPDATE_TASK_TEXT: {\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(task => {\r\n                    if(task.id === action.id) {\r\n                        return {...task, text: action.text}\r\n                    }\r\n                    return task;\r\n                })\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default tasksReducer;","import {CHANGE_FILTER} from \"../constants\";\r\n\r\nconst BASE_BTN = \"all\";\r\n\r\nconst filtersReducer = (state = BASE_BTN, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_FILTER: {\r\n            return action.currentFilter;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default filtersReducer;","import {\r\n    SET_ARTICLES,\r\n    SET_CURRENT_PAGE,\r\n    SET_TOTAL_NEWS_COUNT,\r\n    SET_TOPIC,\r\n    SET_SORT_BY,\r\n    SET_CURRENT_ARTICLE,\r\n    UNSET_CURRENT_ARTICLE\r\n} from \"../constants\";\r\n\r\nlet initialState = {\r\n    articles: [],\r\n    totalNewsCount: 0,\r\n    currentPage: 1,\r\n    pageSize: 20,\r\n    topic: \"apple\",\r\n    sortBy: \"publishedAt\",\r\n    currentArticle: {}\r\n};\r\n\r\nconst newsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ARTICLES: {\r\n            return {\r\n                ...state,\r\n                articles: [...action.articles]\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_NEWS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalNewsCount: action.totalNewsCount\r\n            }\r\n        }\r\n        case SET_TOPIC: {\r\n            return {\r\n                ...state,\r\n                topic: action.topic\r\n            }\r\n        }\r\n        case SET_SORT_BY: {\r\n            return {\r\n                ...state,\r\n                sortBy: action.sortBy\r\n            }\r\n        }\r\n        case SET_CURRENT_ARTICLE: {\r\n            return {\r\n                ...state,\r\n                currentArticle: {\r\n                    ...state.currentArticle,\r\n                    id: action.id,\r\n                    author: action.author,\r\n                    title: action.title,\r\n                    description: action.description,\r\n                    url: action.url,\r\n                    image: action.image,\r\n                    date: action.date,\r\n                    content: action.content\r\n                }\r\n            }\r\n        }\r\n        case UNSET_CURRENT_ARTICLE: {\r\n            return {\r\n                ...state,\r\n                currentArticle: {}\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default newsReducer;","import {SET_CURRENT_WEATHER, SET_FIVE_DAY_FORECAST} from \"../constants\";\r\n\r\nconst initialState = {\r\n    currentWeather: {},\r\n    fiveDayForecast: {}\r\n};\r\n\r\nconst weatherReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_CURRENT_WEATHER: {\r\n            return {\r\n                ...state,\r\n                currentWeather: {\r\n                    ...state.currentWeather,\r\n                    weather: action.weather,\r\n                    main: action.main,\r\n                    visibility: action.visibility,\r\n                    wind: action.wind,\r\n                    clouds: action.clouds,\r\n                    dt: action.dt,\r\n                    sys: action.sys,\r\n                    name: action.name\r\n                }\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default weatherReducer;","import {combineReducers, createStore, applyMiddleware} from \"redux\";\r\nimport tasksReducer from \"./tasksReducer\";\r\nimport filtersReducer from \"./filtersReducer\";\r\nimport newsReducer from \"./newsReducer\";\r\nimport {save, load} from \"redux-localstorage-simple\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport weatherReducer from \"./weatherReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    tasksReducer,\r\n    filtersReducer,\r\n    newsReducer,\r\n    weatherReducer\r\n});\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(save({namespace: \"todo-app\"}), thunkMiddleware)(createStore);\r\nconst store = createStoreWithMiddleware(reducers, load({namespace: \"todo-app\"}));\r\n\r\n//let store = createStore(reducers, applyMiddleware(save({namespace: \"todo-list\"})));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\nimport store from \"./reducers/reduxStore\";\n\nReactDOM.render((\n    <HashRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}